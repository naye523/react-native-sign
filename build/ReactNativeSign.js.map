{"version":3,"file":"ReactNativeSign.js","sourceRoot":"","sources":["../src/ReactNativeSign.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,kBAAkB,EAAgB,MAAM,mBAAmB,CAAA;AAElF,OAAO,eAAe,MAAM,yBAAyB,CAAA;AAErD,MAAM,UAAU,KAAK;IACnB,OAAO,eAAe,CAAC,KAAK,EAAE,CAAA;AAChC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,KAAa;IAC/C,OAAO,MAAM,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;AACnD,CAAC;AAED,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,kBAAkB,CAAC,eAAe,IAAI,eAAe,CAAC,CAAA;AAEvF,MAAM,UAAU,iBAAiB,CAAC,QAA6C;IAC7E,OAAO,OAAO,CAAC,WAAW,CAAqB,UAAU,EAAE,QAAQ,CAAC,CAAA;AACtE,CAAC","sourcesContent":["import { EventEmitter, NativeModulesProxy, Subscription } from 'expo-modules-core'\nimport { ChangeEventPayload, ReactNativeSignViewProps } from './ReactNativeSign.types'\nimport ReactNativeSign from './ReactNativeSignModule'\n\nexport function hello(): string {\n  return ReactNativeSign.hello()\n}\n\nexport async function setValueAsync(value: string) {\n  return await ReactNativeSign.setValueAsync(value)\n}\n\nconst emitter = new EventEmitter(NativeModulesProxy.ReactNativeSign ?? ReactNativeSign)\n\nexport function addChangeListener(listener: (event: ChangeEventPayload) => void): Subscription {\n  return emitter.addListener<ChangeEventPayload>('onChange', listener)\n}\n\nexport { ReactNativeSignViewProps, ChangeEventPayload }\n"]}