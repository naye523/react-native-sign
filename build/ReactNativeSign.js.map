{"version":3,"file":"ReactNativeSign.js","sourceRoot":"","sources":["../src/ReactNativeSign.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAA;AAGpE,OAAO,eAAe,MAAM,yBAAyB,CAAA;AAErD,UAAU;AACV,MAAM,CAAC,MAAM,IAAI,GAAa,KAAK,EAAC,IAAI,EAAC,EAAE;IACzC,OAAO,MAAM,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACzC,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,IAAI,GAAa,KAAK,EAAC,IAAI,EAAC,EAAE;IACzC,OAAO,MAAM,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACzC,CAAC,CAAA;AAED,SAAS;AACT,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,kBAAkB,CAAC,eAAe,IAAI,eAAe,CAAC,CAAA;AAEvF,MAAM,UAAU,iBAAiB,CAAC,QAA+C;IAC/E,OAAO,OAAO,CAAC,WAAW,CAAuB,kBAAkB,EAAE,QAAQ,CAAC,CAAA;AAChF,CAAC","sourcesContent":["import { EventEmitter, NativeModulesProxy } from 'expo-modules-core'\n\nimport { InitFunc, PairFunc, SessionProposalEvent } from './ReactNativeSign.types'\nimport ReactNativeSign from './ReactNativeSignModule'\n\n// Methods\nexport const init: InitFunc = async args => {\n  return await ReactNativeSign.init(args)\n}\n\nexport const pair: PairFunc = async args => {\n  return await ReactNativeSign.pair(args)\n}\n\n// Events\nconst emitter = new EventEmitter(NativeModulesProxy.ReactNativeSign ?? ReactNativeSign)\n\nexport function onSessionProposal(listener: (event: SessionProposalEvent) => void) {\n  return emitter.addListener<SessionProposalEvent>('session_proposal', listener)\n}\n\nexport { SessionProposalEvent }\n"]}